% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/redis.R
\name{cache_redis}
\alias{cache_redis}
\title{A Caching object for redis}
\description{
A Caching object for redis

A Caching object for redis
}
\details{
Create a cache backend with redis
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-cache_redis-new}{\code{cache_redis$new()}}
\item \href{#method-cache_redis-get}{\code{cache_redis$get()}}
\item \href{#method-cache_redis-set}{\code{cache_redis$set()}}
\item \href{#method-cache_redis-has_key}{\code{cache_redis$has_key()}}
\item \href{#method-cache_redis-reset}{\code{cache_redis$reset()}}
\item \href{#method-cache_redis-remove}{\code{cache_redis$remove()}}
\item \href{#method-cache_redis-keys}{\code{cache_redis$keys()}}
\item \href{#method-cache_redis-digest}{\code{cache_redis$digest()}}
\item \href{#method-cache_redis-clone}{\code{cache_redis$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-cache_redis-new"></a>}}
\if{latex}{\out{\hypertarget{method-cache_redis-new}{}}}
\subsection{Method \code{new()}}{
Start a new redis cache
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{cache_redis$new(..., version = NULL, algo = "sha512", compress = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Named configuration options passed to
redis_config, used to create the environment
(notable keys include host, port, and the
environment variable REDIS_URL).
For redis_available, arguments are passed
through to hiredis.}

\item{\code{version}}{Version of the interface to generate.
If given as a string to numeric version,
then only commands that exist up to that
version will be included. If given as TRUE,
then we will query the Redis server (with INFO)
and extract the version number that way.}

\item{\code{algo}}{for \code{{memoise}} compatibility, the \code{digest()} algorithm}

\item{\code{compress}}{for \code{{memoise}} compatibility, should the data be compressed?}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A cache_redis object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-cache_redis-get"></a>}}
\if{latex}{\out{\hypertarget{method-cache_redis-get}{}}}
\subsection{Method \code{get()}}{
Get a key from the cache
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{cache_redis$get(key)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{key}}{Name of the key.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The value stored using the \code{key}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-cache_redis-set"></a>}}
\if{latex}{\out{\hypertarget{method-cache_redis-set}{}}}
\subsection{Method \code{set()}}{
Set a key in the cache
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{cache_redis$set(key, value)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{key}}{Name of the key.}

\item{\code{value}}{Value to store}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Used for side effect
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-cache_redis-has_key"></a>}}
\if{latex}{\out{\hypertarget{method-cache_redis-has_key}{}}}
\subsection{Method \code{has_key()}}{
Does the cache contains a given key?
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{cache_redis$has_key(key)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{key}}{Name of the key.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
TRUE/FALSE
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-cache_redis-reset"></a>}}
\if{latex}{\out{\hypertarget{method-cache_redis-reset}{}}}
\subsection{Method \code{reset()}}{
Clear all the cache
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{cache_redis$reset()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Used for side-effect
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-cache_redis-remove"></a>}}
\if{latex}{\out{\hypertarget{method-cache_redis-remove}{}}}
\subsection{Method \code{remove()}}{
Remove a key/value pair
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{cache_redis$remove(key)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{key}}{Name of the key.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Used for side-effect
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-cache_redis-keys"></a>}}
\if{latex}{\out{\hypertarget{method-cache_redis-keys}{}}}
\subsection{Method \code{keys()}}{
List all the keys in the cache
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{cache_redis$keys()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of keys
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-cache_redis-digest"></a>}}
\if{latex}{\out{\hypertarget{method-cache_redis-digest}{}}}
\subsection{Method \code{digest()}}{
Function that runs an hash algo.
For compatibily with \code{{memoise}}
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{cache_redis$digest(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{the value to hash}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A function
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-cache_redis-clone"></a>}}
\if{latex}{\out{\hypertarget{method-cache_redis-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{cache_redis$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
